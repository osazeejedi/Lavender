/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Clan as PrismaClan } from "@prisma/client";

export class ClanServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.ClanCountArgs, "select">): Promise<number> {
    return this.prisma.clan.count(args);
  }

  async clans(args: Prisma.ClanFindManyArgs): Promise<PrismaClan[]> {
    return this.prisma.clan.findMany(args);
  }
  async clan(args: Prisma.ClanFindUniqueArgs): Promise<PrismaClan | null> {
    return this.prisma.clan.findUnique(args);
  }
  async createClan(args: Prisma.ClanCreateArgs): Promise<PrismaClan> {
    return this.prisma.clan.create(args);
  }
  async updateClan(args: Prisma.ClanUpdateArgs): Promise<PrismaClan> {
    return this.prisma.clan.update(args);
  }
  async deleteClan(args: Prisma.ClanDeleteArgs): Promise<PrismaClan> {
    return this.prisma.clan.delete(args);
  }
}
