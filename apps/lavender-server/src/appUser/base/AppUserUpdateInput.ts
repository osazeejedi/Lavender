/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { BetUpdateManyWithoutAppUsersInput } from "./BetUpdateManyWithoutAppUsersInput";
import {
  ValidateNested,
  IsOptional,
  IsDate,
  IsString,
  MaxLength,
} from "class-validator";
import { Type } from "class-transformer";
import { NotificationUpdateManyWithoutAppUsersInput } from "./NotificationUpdateManyWithoutAppUsersInput";
import { UserAchievementUpdateManyWithoutAppUsersInput } from "./UserAchievementUpdateManyWithoutAppUsersInput";

@InputType()
class AppUserUpdateInput {
  @ApiProperty({
    required: false,
    type: () => BetUpdateManyWithoutAppUsersInput,
  })
  @ValidateNested()
  @Type(() => BetUpdateManyWithoutAppUsersInput)
  @IsOptional()
  @Field(() => BetUpdateManyWithoutAppUsersInput, {
    nullable: true,
  })
  bets?: BetUpdateManyWithoutAppUsersInput;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  createdDate?: Date | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  email?: string | null;

  @ApiProperty({
    required: false,
    type: () => NotificationUpdateManyWithoutAppUsersInput,
  })
  @ValidateNested()
  @Type(() => NotificationUpdateManyWithoutAppUsersInput)
  @IsOptional()
  @Field(() => NotificationUpdateManyWithoutAppUsersInput, {
    nullable: true,
  })
  notifications?: NotificationUpdateManyWithoutAppUsersInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  password?: string | null;

  @ApiProperty({
    required: false,
    type: () => UserAchievementUpdateManyWithoutAppUsersInput,
  })
  @ValidateNested()
  @Type(() => UserAchievementUpdateManyWithoutAppUsersInput)
  @IsOptional()
  @Field(() => UserAchievementUpdateManyWithoutAppUsersInput, {
    nullable: true,
  })
  userAchievements?: UserAchievementUpdateManyWithoutAppUsersInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  username?: string | null;
}

export { AppUserUpdateInput as AppUserUpdateInput };
