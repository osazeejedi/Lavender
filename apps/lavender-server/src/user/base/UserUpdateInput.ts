/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { BetUpdateManyWithoutUsersInput } from "./BetUpdateManyWithoutUsersInput";
import {
  ValidateNested,
  IsOptional,
  IsString,
  MaxLength,
  IsNumber,
  Min,
  Max,
} from "class-validator";
import { Type } from "class-transformer";
import { IsJSONValue } from "../../validators";
import { GraphQLJSON } from "graphql-type-json";
import { InputJsonValue } from "../../types";
import { SupportRequestUpdateManyWithoutUsersInput } from "./SupportRequestUpdateManyWithoutUsersInput";
import { UserAccountUpdateManyWithoutUsersInput } from "./UserAccountUpdateManyWithoutUsersInput";
import { UserAchievementUpdateManyWithoutUsersInput } from "./UserAchievementUpdateManyWithoutUsersInput";

@InputType()
class UserUpdateInput {
  @ApiProperty({
    required: false,
    type: () => BetUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => BetUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => BetUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  bets?: BetUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  bio?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  cryptoPaymentAddress?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  email?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  favoriteGames?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  firstName?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  lastName?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  location?: string | null;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  notifications?: InputJsonValue;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  password?: string;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  privacySettings?: InputJsonValue;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  profilePicture?: InputJsonValue;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  roles?: InputJsonValue;

  @ApiProperty({
    required: false,
    type: () => SupportRequestUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => SupportRequestUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => SupportRequestUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  supportRequests?: SupportRequestUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => UserAccountUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => UserAccountUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => UserAccountUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  userAccounts?: UserAccountUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => UserAchievementUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => UserAchievementUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => UserAchievementUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  userAchievements?: UserAchievementUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  username?: string;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @Min(-999999999)
  @Max(999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  walletBalance?: number | null;
}

export { UserUpdateInput as UserUpdateInput };
